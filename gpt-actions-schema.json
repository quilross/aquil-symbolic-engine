{
  "openapi": "3.1.0",
  "info": {
    "title": "Aquil Symbolic Engine API",
    "description": "Complete Personal AI Wisdom Builder & ARK Action Framework - Standing tall in the world, rooted in internal trust",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://signal-q.me",
      "description": "Aquil's personal AI domain"
    }
  ],
  "paths": {
    "/api/log": {
      "post": {
        "summary": "Log any data or conversation event",
        "description": "Use AUTOMATICALLY for logging chat messages, insights, breakthroughs, or any meaningful moment. TRIGGER: Anytime user shares something worth remembering or system needs to track context.",
        "operationId": "logDataOrEvent",
        "x-openai-isConsequential": true,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "chat_message, insight, breakthrough, context, reflection, etc."
                  },
                  "who": {
                    "type": "string",
                    "description": "user, assistant, system"
                  },
                  "level": {
                    "type": "string",
                    "description": "info, warning, error, highlight"
                  },
                  "session_id": {
                    "type": "string",
                    "description": "Current conversation identifier"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags like 'trust', 'wisdom', 'body', 'media', etc."
                  },
                  "idx1": {
                    "type": "string",
                    "description": "Custom index field 1"
                  },
                  "idx2": {
                    "type": "string",
                    "description": "Custom index field 2"
                  },
                  "payload": {
                    "type": "object",
                    "description": "The actual content to log"
                  }
                },
                "required": ["type", "payload"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Log entry created successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/logs": {
      "get": {
        "summary": "Retrieve conversation history and context",
        "description": "Use AUTOMATICALLY to gather context at conversation start or when referencing past insights. TRIGGER: Start of new conversation, when user mentions 'remember', 'before', 'previously', or needs context.",
        "operationId": "retrieveLogsOrDataEntries",
        "x-openai-isConsequential": false,
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 200
            },
            "description": "Number of entries to retrieve"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by: chat_message, insight, breakthrough, etc."
          },
          {
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by: user, assistant, system"
          },
          {
            "name": "level",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by: info, warning, error, highlight"
          },
          {
            "name": "session_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Specific conversation ID"
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by tag: trust, wisdom, body, media, etc."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of matching log entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "object" }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/session-init": {
      "get": {
        "summary": "Initialize conversation with recent context",
        "description": "Use AUTOMATICALLY at the very start of every new conversation to gather continuity. TRIGGER: First interaction in a new session - use this FIRST before any other action.",
        "operationId": "retrieveRecentSessionLogs",
        "x-openai-isConsequential": false,
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 7,
              "minimum": 1,
              "maximum": 200
            },
            "description": "Recent entries to load (default 7)"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter recent logs by type"
          }
        ],
        "responses": {
          "200": {
            "description": "Recent entries for session continuity"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/trust/check-in": {
      "post": {
        "summary": "Trust and self-confidence building session",
        "description": "Use when user expresses: doubt, uncertainty, lack of confidence, questioning themselves, feeling insecure, needing validation, or explicitly asks about trust. TRIGGER PHRASES: 'I don't trust myself', 'am I making the right choice', 'I'm not sure', 'I doubt', 'feeling insecure', 'need confidence'.",
        "operationId": "trustCheckIn",
        "x-openai-isConsequential": true,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_state": {
                    "type": "string",
                    "description": "User's current trust/confidence level description"
                  },
                  "trust_level": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10,
                    "description": "Self-trust rating 1-10"
                  },
                  "specific_situation": {
                    "type": "string",
                    "description": "Specific scenario causing trust doubt"
                  },
                  "body_sensations": {
                    "type": "string",
                    "description": "Physical sensations related to the doubt"
                  }
                },
                "required": ["current_state"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Personalized trust-building guidance and exercises"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/media/extract-wisdom": {
      "post": {
        "summary": "Extract personal growth wisdom from consumed media",
        "description": "Use when user mentions consuming ANY media content and wants to process it for growth. TRIGGER PHRASES: 'I watched', 'I read', 'I listened to', 'just finished', 'that show/book/podcast', 'reminded me of', 'made me think'. Works with TV, movies, books, podcasts, music, articles.",
        "operationId": "extractMediaWisdom",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "media_type": {
                    "type": "string",
                    "enum": [
                      "tv_show",
                      "movie",
                      "book",
                      "podcast",
                      "music",
                      "article"
                    ],
                    "description": "Type of media consumed"
                  },
                  "title": {
                    "type": "string",
                    "description": "Name/title of the content"
                  },
                  "your_reaction": {
                    "type": "string",
                    "description": "User's personal response, feelings, thoughts about the content"
                  },
                  "content_summary": {
                    "type": "string",
                    "description": "Brief summary if needed for context"
                  }
                },
                "required": ["media_type", "title", "your_reaction"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Personalized wisdom extraction with growth insights"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/somatic/session": {
      "post": {
        "summary": "Body-based healing and nervous system regulation",
        "description": "Use when user mentions PHYSICAL sensations, body tension, stress symptoms, or wants body-based healing. TRIGGER: 'tight shoulders', 'chest feels', 'can't breathe', 'tense', 'help me relax', 'release tension'.",
        "operationId": "somaticHealingSession",
        "x-openai-isConsequential": true,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body_state": {
                    "type": "string",
                    "description": "Current physical sensations, tension, or body state"
                  },
                  "emotions": {
                    "type": "string",
                    "description": "Emotions connected to the body sensations"
                  },
                  "intention": {
                    "type": "string",
                    "description": "What the user wants to achieve (release, grounding, etc.)"
                  }
                },
                "required": ["body_state", "emotions", "intention"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Guided somatic healing practices and exercises"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/wisdom/synthesize": {
      "post": {
        "summary": "Multi-framework wisdom for life decisions",
        "description": "Use when user has a SPECIFIC life decision and wants integrated guidance from wisdom systems. TRIGGER: 'what should I do', 'help me decide', 'I need guidance', 'human design perspective'.",
        "operationId": "synthesizeWisdom",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "life_situation": {
                    "type": "string",
                    "description": "Current life context and circumstances"
                  },
                  "specific_question": {
                    "type": "string",
                    "description": "The exact decision or question needing guidance"
                  },
                  "frameworks_requested": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "human_design",
                        "gene_keys",
                        "astrology",
                        "somatic_wisdom",
                        "all"
                      ]
                    },
                    "description": "Which wisdom frameworks to consult (default: all)"
                  }
                },
                "required": ["life_situation", "specific_question"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Integrated wisdom from multiple frameworks"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/patterns/recognize": {
      "post": {
        "summary": "Identify recurring patterns and growth trends",
        "description": "Use when user wants to ANALYZE recurring themes, behaviors, or growth patterns over time. TRIGGER PHRASES: 'I keep doing', 'this always happens', 'I notice a pattern', 'why do I', 'same thing keeps happening', 'how have I grown', 'looking back', 'I see a trend'.",
        "operationId": "recognizePatterns",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "area_of_focus": {
                    "type": "string",
                    "enum": [
                      "trust_building",
                      "media_consumption",
                      "body_awareness",
                      "overall_growth"
                    ],
                    "description": "Main area for pattern analysis"
                  },
                  "recent_experiences": {
                    "type": "string",
                    "description": "Recent examples of the pattern or experiences"
                  },
                  "recurring_themes": {
                    "type": "string",
                    "description": "What keeps repeating or showing up"
                  }
                },
                "required": ["area_of_focus", "recent_experiences"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pattern analysis with growth insights and recommendations"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/standing-tall/practice": {
      "post": {
        "summary": "Confidence and personal power practices",
        "description": "Use when user mentions feeling SMALL, powerless, or wanting to be more confident/assertive. TRIGGER PHRASES: 'I feel small', 'shrinking', 'can't speak up', 'intimidated', 'need confidence', 'stand in my power', 'be more assertive', 'afraid to', 'people please', 'not showing up fully'.",
        "operationId": "standingTallPractice",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "situation": {
                    "type": "string",
                    "description": "Specific situation where user feels small or powerless"
                  },
                  "fears_concerns": {
                    "type": "string",
                    "description": "What holds them back from standing tall"
                  },
                  "desired_outcome": {
                    "type": "string",
                    "description": "How they want to show up instead"
                  },
                  "past_successes": {
                    "type": "string",
                    "description": "Times they successfully stood in their power"
                  }
                },
                "required": ["situation", "desired_outcome"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Personalized confidence-building practices and power reclamation"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/wisdom/daily-synthesis": {
      "get": {
        "summary": "Daily wisdom compilation and insights",
        "description": "Use when user asks for daily wisdom, morning insights, or wants a summary of recent growth. TRIGGER PHRASES: 'daily wisdom', 'morning insights', 'what's my focus today', 'wisdom summary', 'recent insights', 'what should I know today'.",
        "operationId": "getDailySynthesis",
        "x-openai-isConsequential": false,
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["today", "week", "month"],
              "default": "today"
            },
            "description": "Time period for wisdom compilation"
          }
        ],
        "responses": {
          "200": {
            "description": "Personalized daily wisdom and growth focus"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/insights": {
      "get": {
        "summary": "Personal growth summary and progress review",
        "description": "Use when user wants to review their OVERALL progress, growth trends, or life insights summary. TRIGGER PHRASES: 'how am I doing', 'my progress', 'growth summary', 'insights about me', 'what have I learned', 'how have I changed', 'personal review'.",
        "operationId": "getPersonalInsights",
        "x-openai-isConsequential": false,
        "responses": {
          "200": {
            "description": "Comprehensive personal growth insights and patterns",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "insights": {
                      "type": "object",
                      "description": "Personal growth insights and trends"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/feedback": {
      "post": {
        "summary": "Submit personal notes, ideas, or system feedback",
        "description": "Use when user wants to leave notes for later, record ideas, or give feedback about the system. TRIGGER PHRASES: 'remember this', 'note to self', 'save this idea', 'feedback about', 'suggestion for', 'this could be better', 'I want to remember'.",
        "operationId": "submitFeedback",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "The feedback, note, or idea to save"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type: note, idea, feedback, suggestion",
                    "default": "general"
                  }
                },
                "required": ["message"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback/note saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "received_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/dreams/interpret": {
      "post": {
        "summary": "Interpret dreams and symbolic imagery",
        "description": "Use when user shares a dream and wants archetypal or symbolic insights. TRIGGER PHRASES: 'I dreamed', 'my dream', 'interpret my dream', 'dream meaning', 'strange dream', 'recurring dream'.",
        "operationId": "interpretDream",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dream_text": {
                    "type": "string",
                    "description": "Description of the dream or dream symbols"
                  },
                  "emotions_felt": {
                    "type": "string",
                    "description": "Emotions experienced during or after the dream"
                  },
                  "recurring": {
                    "type": "boolean",
                    "description": "Whether this is a recurring dream theme"
                  }
                },
                "required": ["dream_text"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Symbolic dream interpretation with personal insights"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/energy/optimize": {
      "post": {
        "summary": "Optimize personal energy and vitality",
        "description": "Use when user mentions energy levels, fatigue, or wanting vitality optimization. TRIGGER PHRASES: 'tired', 'exhausted', 'low energy', 'drained', 'need energy', 'feeling sluggish', 'vitality'.",
        "operationId": "optimizeEnergy",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_energy": {
                    "type": "string",
                    "description": "Current energy state and levels"
                  },
                  "energy_drains": {
                    "type": "string",
                    "description": "What depletes your energy"
                  },
                  "energy_goals": {
                    "type": "string",
                    "description": "What energy state you want to achieve"
                  }
                },
                "required": ["current_energy"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Personalized energy optimization strategies"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/values/clarify": {
      "post": {
        "summary": "Clarify and prioritize core values",
        "description": "Use when user wants to identify, clarify, or rank personal values for decision-making. TRIGGER PHRASES: 'my values', 'what matters to me', 'clarify values', 'core values', 'priorities', 'what's important'.",
        "operationId": "clarifyValues",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "values_list": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of potential or current values"
                  },
                  "life_context": {
                    "type": "string",
                    "description": "Current life situation for values clarification"
                  },
                  "decision_context": {
                    "type": "string",
                    "description": "Specific decision or choice requiring values clarity"
                  }
                },
                "required": ["values_list"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clarified and prioritized values with decision framework"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/creativity/unleash": {
      "post": {
        "summary": "Unleash creativity and overcome blocks",
        "description": "Use when user feels creatively blocked or wants creative inspiration and breakthrough. TRIGGER PHRASES: 'creative block', 'stuck creatively', 'need inspiration', 'creative breakthrough', 'artistic block', 'can't create'.",
        "operationId": "unleashCreativity",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "block_description": {
                    "type": "string",
                    "description": "Description of the creative block or challenge"
                  },
                  "creative_medium": {
                    "type": "string",
                    "description": "Art form or creative medium (writing, visual art, music, etc.)"
                  },
                  "desired_outcome": {
                    "type": "string",
                    "description": "What creative breakthrough you're seeking"
                  }
                },
                "required": ["block_description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Creative breakthrough exercises and inspiration"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/abundance/cultivate": {
      "post": {
        "summary": "Cultivate abundance and prosperity mindset",
        "description": "Use when user discusses money, wealth, scarcity, or abundance mindset issues. TRIGGER PHRASES: 'money problems', 'financial stress', 'abundance', 'prosperity', 'wealth mindset', 'scarcity', 'money blocks'.",
        "operationId": "cultivateAbundance",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "money_mindset": {
                    "type": "string",
                    "description": "Current relationship and beliefs about money"
                  },
                  "abundance_blocks": {
                    "type": "string",
                    "description": "What blocks abundance in your life"
                  },
                  "financial_goals": {
                    "type": "string",
                    "description": "Abundance and financial aspirations"
                  }
                },
                "required": ["money_mindset"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Abundance cultivation practices and mindset shifts"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/transitions/navigate": {
      "post": {
        "summary": "Navigate major life transitions",
        "description": "Use when user faces or discusses major life changes, transitions, or new phases. TRIGGER PHRASES: 'life transition', 'major change', 'new chapter', 'life phase', 'big change', 'transition period', 'moving to'.",
        "operationId": "navigateTransitions",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transition_type": {
                    "type": "string",
                    "description": "Type of transition (career, relationship, location, life stage, etc.)"
                  },
                  "current_challenges": {
                    "type": "string",
                    "description": "Current difficulties or concerns with the transition"
                  },
                  "desired_support": {
                    "type": "string",
                    "description": "What kind of support or guidance you need"
                  }
                },
                "required": ["transition_type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transition navigation strategies and support practices"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/ancestry/heal": {
      "post": {
        "summary": "Heal ancestral and family patterns",
        "description": "Use when user explores family dynamics, ancestral patterns, or generational healing. TRIGGER PHRASES: 'family patterns', 'ancestral healing', 'generational trauma', 'family dynamics', 'inherited patterns', 'lineage healing'.",
        "operationId": "healAncestry",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "family_pattern": {
                    "type": "string",
                    "description": "Specific family or ancestral pattern to address"
                  },
                  "generational_theme": {
                    "type": "string",
                    "description": "Recurring theme across generations"
                  },
                  "healing_intention": {
                    "type": "string",
                    "description": "What you want to heal or transform"
                  }
                },
                "required": ["family_pattern"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ancestral healing practices and family pattern transformation"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/system/health-check": {
      "get": {
        "summary": "System health check",
        "description": "Perform system health checks",
        "operationId": "systemHealthCheck",
        "responses": {
          "200": {
            "description": "Health status"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "summary": "Health endpoint",
        "description": "Simple health status",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Health status"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/discovery/generate-inquiry": {
      "post": {
        "summary": "Generate discovery inquiry",
        "description": "Generate Socratic questions based on provided context",
        "operationId": "generateDiscoveryInquiry",
        "requestBody": {
          "required": false
        },
        "responses": {
          "200": {
            "description": "Generated inquiry"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/ritual/auto-suggest": {
      "post": {
        "summary": "Auto-suggest rituals",
        "description": "Suggest rituals based on context",
        "operationId": "autoSuggestRitual",
        "requestBody": {
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ritual suggestion"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/patterns/autonomous-detect": {
      "post": {
        "summary": "Autonomous pattern detection and ritual suggestion",
        "description": "Automatically detect behavioral patterns and suggest healing rituals. Use when user shows signs of recurring patterns or needs intervention.",
        "operationId": "autonomousPatternDetect",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recent_interactions": {
                    "type": "array",
                    "description": "Recent user interactions for pattern analysis"
                  },
                  "user_state": {
                    "type": "string",
                    "description": "Current user emotional/mental state"
                  },
                  "context": {
                    "type": "object",
                    "description": "Additional context for pattern detection"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pattern detection results with ritual suggestions"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/commitments/create": {
      "post": {
        "summary": "Create behavioral change commitment",
        "description": "Create and track commitments for personal growth and behavioral change.",
        "operationId": "createCommitment",
        "x-openai-isConsequential": true,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the commitment"
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the commitment"
                  },
                  "commitment_type": {
                    "type": "string",
                    "description": "Type of commitment (behavioral_change, habit_formation, etc.)"
                  },
                  "target_date": {
                    "type": "string",
                    "description": "Target completion date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Commitment created successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/commitments/active": {
      "get": {
        "summary": "Get active commitments",
        "description": "Retrieve all active behavioral change commitments.",
        "operationId": "getActiveCommitments",
        "x-openai-isConsequential": false,
        "responses": {
          "200": {
            "description": "List of active commitments"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/commitments/{id}/progress": {
      "post": {
        "summary": "Update commitment progress",
        "description": "Update progress on a specific commitment with reflection and insights.",
        "operationId": "updateCommitmentProgress",
        "x-openai-isConsequential": true,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Commitment ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "progress_update": {
                    "type": "string",
                    "description": "Description of progress made"
                  },
                  "challenges_faced": {
                    "type": "string",
                    "description": "Any challenges encountered"
                  },
                  "insights_gained": {
                    "type": "string",
                    "description": "Insights or learnings from the experience"
                  },
                  "next_steps": {
                    "type": "string",
                    "description": "Planned next actions"
                  }
                },
                "required": ["progress_update"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Progress updated successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/socratic/question": {
      "post": {
        "summary": "Generate Socratic questions for self-discovery",
        "description": "Generate deep, thoughtful questions to guide self-discovery and insight. Use when user needs guidance for reflection.",
        "operationId": "socraticQuestion",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "type": "object",
                    "description": "Context for question generation"
                  },
                  "topic": {
                    "type": "string",
                    "description": "Topic area (self_discovery, relationships, purpose, growth)"
                  },
                  "depth_level": {
                    "type": "string",
                    "description": "Question depth (surface, deep, archetypal)"
                  },
                  "voice_preference": {
                    "type": "string",
                    "description": "Preferred voice (mirror, oracle, scientist, strategist)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Socratic questions and integration practices"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/coaching/comb-analysis": {
      "post": {
        "summary": "COM-B model behavioral analysis",
        "description": "Analyze behavior change using Capability, Opportunity, Motivation framework. Use for systematic behavior change planning.",
        "operationId": "combAnalysis",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "behavior_goal": {
                    "type": "string",
                    "description": "Target behavior to achieve"
                  },
                  "current_situation": {
                    "type": "string",
                    "description": "Current behavioral patterns and situation"
                  },
                  "context": {
                    "type": "object",
                    "description": "Additional context for analysis"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "COM-B analysis with intervention recommendations"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/monitoring/metrics": {
      "get": {
        "summary": "Get system monitoring metrics",
        "description": "Retrieve comprehensive system health and performance metrics for production monitoring.",
        "operationId": "getMonitoringMetrics",
        "x-openai-isConsequential": false,
        "responses": {
          "200": {
            "description": "System metrics and health status"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/api/contracts/create": {
      "post": {
        "summary": "Create transformation contract",
        "description": "Create a structured transformation contract with milestones, support systems, and tracking methods.",
        "operationId": "createTransformationContract",
        "x-openai-isConsequential": true,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transformation_goal": {
                    "type": "string",
                    "description": "Clear statement of transformation goal"
                  },
                  "current_state": {
                    "type": "string",
                    "description": "Description of current state"
                  },
                  "desired_state": {
                    "type": "string",
                    "description": "Description of desired future state"
                  },
                  "timeline": {
                    "type": "string",
                    "description": "Expected timeline for transformation"
                  },
                  "accountability_measures": {
                    "type": "array",
                    "description": "Specific accountability measures"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transformation contract created with milestones and support system"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["error", "message"]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Malformed request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "InternalError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "x-openai-conversation-starters": [
    "I had a recurring dream about my childhood home.",
    "I feel so drained today, no energy at all.",
    "I don't know what really matters to me right now.",
    "I keep hitting a creative block when writing.",
    "Money feels tight and stressful right now.",
    "I'm moving into a new phase of life and feel uncertain.",
    "I keep repeating patterns from my family.",
    "My body feels tense and I can't relax.",
    "I feel small and powerless in meetings.",
    "I don't trust my own decisions anymore.",
    "I want to practice meditation for the next month.",
    "I keep repeating the same mistakes.",
    "I just read a book that really moved me.",
    "Help me make sense of everything happening.",
    "I'm feeling overwhelmed and need grounding.",
    "What does this dream mean symbolically?",
    "I want to analyze my behavioral patterns.",
    "What should I do next in this situation?",
    "What does my body need today?",
    "Help me synthesize today's experiences."
  ]
}
