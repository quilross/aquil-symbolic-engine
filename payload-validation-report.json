{
  "summary": {
    "totalTests": 5,
    "passedTests": 2,
    "failedTests": 3,
    "successRate": 40
  },
  "results": [
    {
      "operationId": "logDataOrEvent",
      "path": "/api/log",
      "method": "POST",
      "schemaValidation": {
        "valid": true,
        "errors": [],
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "default": "chat_message",
              "description": "Event type (chat_message, insight, breakthrough, emotion, etc.)"
            },
            "who": {
              "type": "string",
              "default": "user",
              "description": "Who generated this event (user, assistant, system)"
            },
            "level": {
              "type": "string",
              "default": "info",
              "description": "Importance level (debug, info, significant, breakthrough)"
            },
            "payload": {
              "type": "object",
              "description": "Event data and context"
            }
          },
          "required": [
            "payload"
          ]
        }
      },
      "backendValidation": {
        "exists": true,
        "operationId": null,
        "matches": false
      },
      "overallStatus": "PASSED"
    },
    {
      "operationId": "somaticHealingSession",
      "path": "/api/somatic/session",
      "method": "POST",
      "schemaValidation": {
        "valid": false,
        "error": "Operation not found in schema"
      },
      "backendValidation": {
        "exists": true,
        "operationId": null,
        "matches": false
      },
      "overallStatus": "FAILED"
    },
    {
      "operationId": "recognizePatterns",
      "path": "/api/patterns/recognize",
      "method": "POST",
      "schemaValidation": {
        "valid": false,
        "error": "Operation not found in schema"
      },
      "backendValidation": {
        "exists": true,
        "operationId": null,
        "matches": false
      },
      "overallStatus": "FAILED"
    },
    {
      "operationId": "manageCommitment",
      "path": "/api/commitments/create",
      "method": "POST",
      "schemaValidation": {
        "valid": true,
        "errors": [],
        "schema": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "enum": [
                "create",
                "update"
              ],
              "description": "Type of commitment action to perform"
            },
            "commitment": {
              "type": "string",
              "description": "Detailed commitment description"
            },
            "timeframe": {
              "type": "string",
              "description": "Timeline for commitment completion"
            },
            "micro_practice": {
              "type": "boolean",
              "description": "Whether this is a micro-practice commitment"
            }
          },
          "required": [
            "action",
            "commitment"
          ]
        }
      },
      "backendValidation": {
        "exists": true,
        "operationId": null,
        "matches": false
      },
      "overallStatus": "PASSED"
    },
    {
      "operationId": "trustCheckIn",
      "path": "/api/trust/check-in",
      "method": "POST",
      "schemaValidation": {
        "valid": false,
        "error": "Operation not found in schema"
      },
      "backendValidation": {
        "exists": true,
        "operationId": "trustCheckIn",
        "matches": true
      },
      "overallStatus": "FAILED"
    }
  ]
}